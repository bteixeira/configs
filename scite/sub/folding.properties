
	###   Set this property to 0 to disable folding multi-line comments when
	###   fold.comment=1.
	###
# fold.abl.comment.multiline





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.abl.syntax.based





	###   This option enables folding explicit fold points when using the Asm
	###   lexer. Explicit fold points allows adding extra folding by placing a
	###   ;{ comment at the start and a ;} at the end of a section that should
	###   fold.
	###
# fold.asm.comment.explicit





	###   Set this property to 1 to enable folding multi-line comments.
	###
# fold.asm.comment.multiline





	###   Set this property to 1 to enable explicit fold points anywhere, not
	###   just in line comments.
	###
# fold.asm.explicit.anywhere





	###   The string to use for explicit fold end points, replacing the standard
	###   ;}.
	###
# fold.asm.explicit.end





	###   The string to use for explicit fold start points, replacing the
	###   standard ;{.
	###
# fold.asm.explicit.start





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.asm.syntax.based





	###   This option enables C++ folding on a "} else {" line of an if
	###   statement.
	###
# fold.at.else





	###   Set this property to 1 to enable folding of inner levels of select
	###   statements.Disabled by default. case and if statements are also
	###   eligible
	###
# fold.baan.inner.level





	###   Set this property to 0 to disable keywords based folding, which is
	###   folding based on for, if, on (case), repeat, select, while and fold
	###   ends based on endfor, endif, endcase, until, endselect, endwhile
	###   respectively. Also folds declarations which are grouped together.
	###
# fold.baan.keywords.based





	###   Set this property to 0 to disable folding of Main Sections as well as
	###   Sub Sections.
	###
# fold.baan.sections





	###   Set this property to 0 to disable syntax based folding, which is
	###   folding based on '{' & '('.
	###
# fold.baan.syntax.based





	###   This option enables folding explicit fold points when using the Basic
	###   lexer. Explicit fold points allows adding extra folding by placing a
	###   ;{ (BB/PB) or '{ (FB) comment at the start and a ;} (BB/PB) or '} (FB)
	###   at the end of a section that should be folded.
	###
# fold.basic.comment.explicit





	###   Set this property to 1 to enable explicit fold points anywhere, not
	###   just in line comments.
	###
# fold.basic.explicit.anywhere





	###   The string to use for explicit fold end points, replacing the standard
	###   ;} (BB/PB) or '} (FB).
	###
# fold.basic.explicit.end





	###   The string to use for explicit fold start points, replacing the
	###   standard ;{ (BB/PB) or '{ (FB).
	###
# fold.basic.explicit.start





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.basic.syntax.based





	###   This option enables folding multi-line comments and explicit fold
	###   points when using the C++ lexer. Explicit fold points allows adding
	###   extra folding by placing a //{ comment at the start and a //} at the
	###   end of a section that should fold.
	###
fold.comment=1





	###   Set this property to 0 to disable folding explicit fold points when
	###   fold.comment=1.
	###
# fold.cpp.comment.explicit





	###   Set this property to 0 to disable folding multi-line comments when
	###   fold.comment=1.
	###
# fold.cpp.comment.multiline


	
	
	
	###   Set this property to 1 to enable explicit fold points anywhere, not
	###   just in line comments.
	###
# fold.cpp.explicit.anywhere





	###   The string to use for explicit fold end points, replacing the standard
	###   //}.
	###
# fold.cpp.explicit.end





	###   The string to use for explicit fold start points, replacing the
	###   standard //{.
	###
# fold.cpp.explicit.start





	###   This option enables folding on a preprocessor #else or #endif line of
	###   an #if statement.
	###
# fold.cpp.preprocessor.at.else





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.cpp.syntax.based





	###   Set this property to 0 to disable folding explicit fold points when
	###   fold.comment=1.
	###
# fold.d.comment.explicit





	###   Set this property to 0 to disable folding multi-line comments when
	###   fold.comment=1.
# fold.d.comment.multiline





	###   Set this property to 1 to enable explicit fold points anywhere, not
	###   just in line comments.
	###
# fold.d.explicit.anywhere





	###   The string to use for explicit fold end points, replacing the standard
	###   //}.
	###
# fold.d.explicit.end





	###   The string to use for explicit fold start points, replacing the
	###   standard //{.
	###
# fold.d.explicit.start





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.d.syntax.based





	###   Set to 1 to enable folding of import declarations
	###
# fold.haskell.imports





	###   Folding is turned on or off for HTML and XML files with this option.
	###   The fold option must also be on for folding to occur.
	###
# fold.html





	###   Folding is turned on or off for scripts embedded in HTML files with
	###   this option. The default is on.
	###
# fold.html.preprocessor





	###   Allow folding for comments in scripts embedded in HTML. The default is
	###   off.
	###
fold.hypertext.comment=1





	###   Allow folding for heredocs in scripts embedded in HTML. The default is
	###   off.
	###
fold.hypertext.heredoc=1





	###   This option enables Perl folding on a "} else {" line of an if
	###   statement.
	###
# fold.perl.at.else





	###   Set to 0 to disable explicit folding.
	###
# fold.perl.comment.explicit





	###   Set to 0 to disable folding packages when using the Perl lexer.
	###
# fold.perl.package





	###   Set to 0 to disable folding Pod blocks when using the Perl lexer.
	###
# fold.perl.pod





	###   This option enables folding preprocessor directives when using the C++
	###   lexer. Includes C#'s explicit #region and #endregion folding
	###   directives.
	###
# fold.preprocessor





	###   This option enables folding multi-line quoted strings when using the
	###   Python lexer.
	###
# fold.quotes.python





	###   Set this property to 0 to disable folding explicit fold points when
	###   fold.comment=1.
	###
# fold.rust.comment.explicit





	###   Set this property to 0 to disable folding multi-line comments when
	###   fold.comment=1.
	###
# fold.rust.comment.multiline





	###   Set this property to 1 to enable explicit fold points anywhere, not
	###   just in line comments.
	###
# fold.rust.explicit.anywhere





	###   The string to use for explicit fold end points, replacing the standard
	###   //}.
	###
# fold.rust.explicit.end





	###   The string to use for explicit fold start points, replacing the
	###   standard //{.
	###
# fold.rust.explicit.start





	###   Set this property to 0 to disable syntax based folding.
	###
# fold.rust.syntax.based





	###   This option enables SQL folding on a "ELSE" and "ELSIF" line of an IF
	###   statement.
	###
fold.sql.at.else=1





	###   This option enables folding module definitions. Typically source files
	###   contain only one module definition so this option is somewhat useless.
	###
# fold.verilog.flags





	###   This option enables D folding on a "} else {" line of an if statement.
	###
# lexer.d.fold.at.else





	###   Folding is turned on by setting fold=1.
	###
fold=1





	###   The fold.symbols setting chooses between four ways of showing folding.
	###   Set to 0 (the default) for MacOS style arrows to indicate contracted
	###   (facing right) and expanded (facing down); 1 to display contracted
	###   folds with "+" and expanded with "-"; 2 for a flattened tree control
	###   with round headers and rounded joins; 3 for a flattened tree control
	###   with square headers.
	###
fold.symbols=3





	###   Sets the width of the fold margin.
	###
# fold.margin.width





	###   To automatically fold files as much as possible when loaded, set
	###   fold.on.open to 1.
	###
# fold.on.open





	###   Not really documented ;) bit flags which may go away. 2, 4, 8, and 16
	###   control drawing lines above and below folding lines if expanded or not
	###   expanded. Set to 64 to help debug folding # by showing hexadecimal
	###   fold levels in margin.
	###
# fold.flags





	###   For HTML, XML, Lua and C++ and similar files, turning this option on
	###   leads to blank lines following the end of an element folding with that
	###   element. Defaults to on.
	###
# fold.compact





	###   Set to 1 to enable highlight for current folding block (smallest one
	###   that contains the caret). By default, it's disable. Note : The
	###   highlight is enabled only when fold.symbols equals to 2 (round
	###   headers) or 3 (square headers).
	###
fold.highlight=1
